(this["webpackJsonpjavascript-explorer"]=this["webpackJsonpjavascript-explorer"]||[]).push([[0],{106:function(e,t,n){},111:function(e,t,n){var r={"./array.en.json":112,"./object.en.json":113,"./string.en.json":114};function s(e){var t=a(e);return n(t)}function a(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}s.keys=function(){return Object.keys(r)},s.resolve=a,e.exports=s,s.id=111},112:function(e){e.exports=JSON.parse('{"baseUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/","dropdownLabel":"I have an Array, I would like to: ","defaultCode":"let arr = [5, 1, 8];","options":{"add items or merge arrays":{"dropdownLabel":"I need to add:","options":[{"name":"splice","shortDesc":"element/s to an array","desc":"Adds and/or removes elements from an array.","example":"arr.splice(2, 0, \'tacos\');<br>console.log(arr);","output":"[5, 1, \'tacos\', 8]"},{"name":"push","shortDesc":"elements to the end of an array","desc":"Adds one or more elements to the end of an array and returns the new length of the array.","example":"arr.push(2);<br>console.log(arr);","output":"[5, 1, 8, 2]"},{"name":"unshift","shortDesc":"elements to the front of an array","desc":"Adds one or more elements to the front of an array and returns the new length of the array.","example":"arr.unshift(2, 7);<br>console.log(arr);","output":"[2, 7, 5, 1, 8]"},{"name":"concat","shortDesc":"this array to other array(s) and/or value(s)","desc":"Returns a new array comprised of this array joined with other array(s) and/or value(s).","example":"let arr2 = [\'a\', \'b\', \'c\'];<br>let arr3 = arr.concat(arr2);<br>console.log(arr3);","output":"[5, 1, 8, \'a\', \'b\', \'c\']"}]},"find one item":{"dropdownLabel":"I need to find:","options":[{"name":"includes","shortDesc":"out if a certain element exists","desc":"Determines whether an array contains a certain element, returning true or false as appropriate.","example":"console.log(arr.includes(1));","output":"true"},{"name":"indexOf","shortDesc":"the first index of a particular item","desc":"Returns the first index at which a given element can be found in the array, or -1 if it is not present.","example":"console.log(arr.indexOf(5));","output":"0"},{"name":"lastIndexOf","shortDesc":"the last index of a particular item","desc":"Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found.","example":"console.log(arr.lastIndexOf(5));","output":"0"},{"name":"find","shortDesc":"the first element that satisfies a condition","desc":"Returns the found value in the array, if an element in the array satisfies the provided testing function or undefined if not found. Similar to <code>findIndex()</code>, but it returns the item instead of the index.","example":"let isTiny = (el) => el < 2;<br>console.log(arr.find(isTiny));","output":"1"},{"name":"findIndex","shortDesc":"the first index of an item that satisfies a condition","desc":"Returns the index of the first element in the array that satisfies the provided testing function. Otherwise -1 is returned. Similar to <code>find()</code>, but it returns the index instead of the item.","example":"let isBig = (el) => el > 6;<br>console.log(arr.findIndex(isBig));","output":"2"},{"name":"reduce","shortDesc":"a value by reducing the Array, start to finish","desc":"Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.","example":"let reducer = (a, b) => a + b;<br>console.log(arr.reduce(reducer));","output":"14"},{"name":"reduceRight","shortDesc":"a value by reducing the Array, finish to start","desc":"Apply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value.","example":"[arr, [0, 1]].reduceRight((a, b) => {<br> <span>&nbsp;&nbsp;</span>return a.concat(b)<br>},[])","output":"[0, 1, 5, 1, 8]"}]},"find one or more items":{"dropdownLabel":"I need to find:","options":[{"name":"filter","shortDesc":"values based on a condition I create","desc":"Creates a new array with all of the elements of this array for which the provided filtering function returns true.","example":"let filtered = arr.filter(el => el > 4);<br>console.log(filtered)","output":"[5, 8]"},{"name":"every","shortDesc":"whether or not every item satisfies a condition","desc":"Returns true if every element in this array satisfies the provided testing function.","example":"let isSmall = (el) => el < 10;<br>console.log(arr.every(isSmall));","output":"true"},{"name":"some","shortDesc":"whether or not at least one item satisfies a condition","desc":"Returns true if at least one element in this array satisfies the provided testing function.","example":"let biggerThan4 = (el) => el > 4;<br>console.log(arr.some(biggerThan4));","output":"true"}]},"order the items (sorting)":{"dropdownLabel":"I need to:","options":[{"name":"reverse","shortDesc":"reverse the order of the array","desc":"Reverses the order of the elements of an array in place \u2014 the first becomes the last, and the last becomes the first.","example":"arr.reverse();<br>console.log(arr);","output":"[8, 1, 5]"},{"name":"sort","shortDesc":"sort the items of the array","desc":"Sorts the elements of an array in place and returns the array.<br><br><strong > Note: </strong> If compareFunction is not supplied, elements are sorted by converting them to strings and comparing strings in Unicode code point order. For example, \\"Banana\\" comes before \\"cherry\\". In a numeric sort, 9 comes before 80, but because numbers are converted to strings, \\"80\\" comes before \\"9\\" in Unicode order. The docs have more information to clarify.","example":"arr.sort();<br>console.log(arr);","output":"[1, 5, 8]"}]},"remove items":{"dropdownLabel":"I need to:","options":[{"name":"splice","shortDesc":"element/s from an array","desc":"Adds and/or removes elements from an array.","example":"arr.splice(2, 1);<br>console.log(arr);","output":"[5, 1]"},{"name":"pop","shortDesc":"the last element of the array","desc":"Removes the last element from an array and returns that element.","example":"arr.pop();<br>console.log(arr);","output":"[5, 1]"},{"name":"shift","shortDesc":"the first element of the array","desc":"Removes the first element from an array and returns that element.","example":"arr.shift();<br>console.log(arr);","output":"[1, 8]"},{"name":"slice","shortDesc":"one or more elements in order for use, leaving the array as is","desc":"The <code>slice()</code> method returns a shallow copy of a portion of an array into a new array object. You can specify either just the beginning element (where end will default to the arrays length) or both the beginning and the end, comma-separated. The original array will not be modified.","example":"let slicedArr = arr.slice(1);<br>console.log(arr);<br>console.log(slicedArr);","output":"[5, 1, 8]<br> [1, 8]"}]},"return a string from array":{"dropdownLabel":"I need to:","options":[{"name":"join","shortDesc":"join all elements of the array into a string","desc":"Joins all elements of an array into a string. You can join it together as is or with something in between, <code>elements.join(\' - \')</code> gives you <code>foo - bar</code>","example":"console.log(arr.join());","output":"\'5, 1, 8\'"},{"name":"toString","shortDesc":"return a string representing the array.","desc":"Returns a string representing the array and its elements.","example":"console.log(arr.toString());","output":"\'5, 1, 8\'"},{"name":"toLocaleString","shortDesc":"return a localized string representing the array.","desc":"This one is a bit wacko. Returns a localized string representing the array and its elements. This is very useful for dates and currency and has some strange native abstractions, so best to consult the docs when using it","example":"let date = [new Date()];<br>const arrString = arr.toLocaleString(); <br>const dateString = date.toLocaleString(); <br>console.log(arrString, dateString);","output":"\'5,1,8 12/26/2017, 6:54:49 PM\'"}]},"walk (iterate) over items":{"dropdownLabel":"I need to iterate by:","options":[{"name":"forEach","shortDesc":"executing a function I will create for each element","desc":"The forEach() method executes a provided function once for each array element.","example":"arr.forEach((element) => {<br> <span> &nbsp; &nbsp; </span>console.log(element)<br>});","output":"5<br>1 <br>8"},{"name":"map","shortDesc":"creating a new array from each element with a function I create","desc":"Creates a new array with the results of calling a provided function on every element in this array.","example":"let map = arr.map(x => x + 1);<br>console.log(map);","output":"[6, 2, 9]"},{"name":"entries","shortDesc":"creating an iterator object","desc":"Returns a new Array Iterator object that contains the key/value pairs for each index in the array. There are a lot of uses for iterators, as well as other methods used with it in conjuction, like <code>values</code> and <code>keys</code>","example":"let iterator = arr.entries();<br>console.log(iterator.next().value);","output":"[0, 5]<br> <span class=\'comment\'> // the 0 is the index,</span><br><span class=\'comment\' > // the 5 is the first number</span>"}]},"something else":{"dropdownLabel":"I need to:","options":[{"name":"length","shortDesc":"find the length of the array","desc":"Returns the number of elements in that array.","example":"console.log(arr.length);","output":"3"},{"name":"fill","shortDesc":"fill all the elements of the array with a static value","desc":"Fills all the elements of an array from a start index to an end index with a static value.","example":"arr.fill(2);<br>console.log(arr);","output":"[2, 2, 2]"},{"name":"copyWithin","shortDesc":"copy a sequence of array elements within the array.","desc":"Copies a sequence of array elements within the array. You can specify either just the ending element (where begin will default to zero) or both the beginning and the end, comma-separated.","example":"arr.copyWithin(1);<br>console.log(arr);","output":"[5, 5, 1]"}]}}}')},113:function(e){e.exports=JSON.parse('{"baseUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/","dropdownLabel":"I have an object, I would like to: ","defaultCode":"<span>let obj = {<br><span>&nbsp;&nbsp;</span>a: 1,<br><span>&nbsp;&nbsp;</span>b: 2,<br><span>&nbsp;&nbsp;</span>c: 3<br>};</span>","options":{"create an object":{"dropdownLabel":"I need to:","options":[{"name":"create","shortDesc":"create a new object","desc":"Creates a new object with the specified prototype object and properties.<br><br><strong>Important note for beginners!</strong> It\'s more common to create an object the way that it\'s shown at the top of the example, like this <code>let obj = { a: 1 };</code>","example":"const obj2 = Object.create(obj);<br>console.log(obj2);","output":"Object {<br><span>&nbsp;&nbsp;</span>a: 1,<br><span>&nbsp;&nbsp;</span>b: 2,<br><span>&nbsp;&nbsp;</span>c: 3<br>}"},{"name":"assign","shortDesc":"make a copy of an object","desc":"Copies the values of all enumerable own properties from one or more source objects to a target object. It will return the target object. Though not technically a built in object method, it\'s more common when using ES6 to make use of the <a href=\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\\" target=\\"_blank\\">Spread Operator</a>, by using <code>...</code>","example":"const copy = Object.assign({}, obj);<br>console.log(copy);","output":"Object {<br><span>&nbsp;&nbsp;</span>a: 1,<br><span>&nbsp;&nbsp;</span>b: 2,<br><span>&nbsp;&nbsp;</span>c: 3<br>}"}]},"create properties":{"dropdownLabel":"I need to create:","options":[{"name":"defineProperty","shortDesc":"a new property or modify an existing one","desc":"Adds the named property described by a given descriptor to an object.<br><br><strong>Important note for beginners!</strong> It\'s more common to use dot or square bracket notation to create a new property or modify an existing one. Like this: <code>obj.a = 1</code> or <code>obj[a] = 1</code>. This isn\'t technically a built-in method, that\'s why it\'s not included.","example":"Object.defineProperty(obj, \'d\', {<br><span>&nbsp;&nbsp;</span>enumerable: true,<br><span>&nbsp;&nbsp;</span>configurable: true,<br><span>&nbsp;&nbsp;</span>writable: true,<br><span>&nbsp;&nbsp;</span>value: 4<br>});<br><br>console.log(obj.d);","output":"4"},{"name":"defineProperties","shortDesc":"one or more properties or modify existing properties","desc":"Adds one or more properties described by a given descriptor to an object.<br><br><strong>Important note for beginners!</strong> It\'s more common to use dot or square bracket notation to create a new property or modify an existing one. Like this: <code>obj.a = 1</code> or <code>obj[a] = 1</code>. This isn\'t technically a built-in method, that\'s why it\'s not included.","example":"Object.defineProperties(obj, {<br><span>&nbsp;&nbsp;</span>d: {<br><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>value: 4,<br><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>writable: true<br><span>&nbsp;&nbsp;</span>},<br><span>&nbsp;&nbsp;</span>e: {<br><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>value: 5,<br><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>writable: true<br><span>&nbsp;&nbsp;</span>}<br>});<br><br>console.log(obj);","output":"{a: 1, b: 2, c: 3, d: 4, e: 5}"}]},"get information about an object":{"dropdownLabel":"I need to determine:","options":[{"name":"isExtensible","shortDesc":"if more properties can be added","desc":"Determines if extending of an object is allowed.","example":"console.log(Object.isExtensible(obj));<br>Object.freeze(obj);<br>console.log(Object.isExtensible(obj));","output":"true<br>false"},{"name":"is","shortDesc":"if two references point to the same object","desc":"Compares if two references point to the same object. Equates all NaN values (which differs from both Abstract Equality Comparison and Strict Equality Comparison). This one is a little weird, and the MDN docs are a bit misleading. It\'s <a href=\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#When_to_use_Object.is_versus_triple_equals\\" target=\\"_blank\\">more useful to use triple equals <code>===</code></a> to check equality","example":"let obj2 = {<br><span>&nbsp;&nbsp;</span>a: 1,<br><span>&nbsp;&nbsp;</span>b: 2,<br><span>&nbsp;&nbsp;</span>c: 3<br>};<br><br>console.log(Object.is(obj, obj2));<br>console.log(Object.is(obj, obj));","output":"false<br>true"},{"name":"isFrozen","shortDesc":"if an object and its properties can\'t be modified","desc":"Determines if an object is frozen","example":"console.log(Object.isFrozen(obj));<br>Object.freeze(obj);<br>console.log(Object.isFrozen(obj));","output":"false<br>true"},{"name":"isSealed","shortDesc":"if an object can\'t be modified (its properties can be, though)","desc":"Determines if the descriptor of its properties can\'t be changed and new properties can\'t be created.","example":"Object.seal(obj);<br><br>console.log(Object.isSealed(obj));","output":"true"}]},"get information about property details":{"dropdownLabel":"I need to find out:","options":[{"name":"getOwnPropertyDescriptor","shortDesc":"details about a property","desc":"Returns a property descriptor for a named property on an object","example":"const o = Object.getOwnPropertyDescriptor(obj, \'a\');<br><br>console.log(o);","output":"Object {<br><span>&nbsp;&nbsp;</span>configurable: true,<br><span>&nbsp;&nbsp;</span>enumerable: true,<br><span>&nbsp;&nbsp;</span>value: 1,<br><span>&nbsp;&nbsp;</span>writable: true<br>}"},{"name":"getOwnPropertyDescriptors","shortDesc":"details about all the properties on an object","desc":"Returns an object containing all own property descriptors for an object","example":"console.log(Object.getOwnPropertyDescriptors(obj))","output":"Object {<br><span>&nbsp;&nbsp;</span>a: Object {<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>configurable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>enumerable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>value: 1,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>writable: true<br><span>&nbsp;&nbsp;</span>},<br><span>&nbsp;&nbsp;</span>b: Object {<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>configurable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>enumerable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>value: 2,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>writable: true<br><span>&nbsp;&nbsp;</span>},<br><span>&nbsp;&nbsp;</span>c: Object {<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>configurable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>enumerable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>value: 3,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>writable: true<br><span>&nbsp;&nbsp;</span>},<br>}"},{"name":"propertyIsEnumerable","shortDesc":"if a property can be traversed with a for...in loop","desc":"Returns a boolean indicating if the internal ECMAScript [[Enumerable]] attribute is set. This can be used to see if something is a built-in or user-defined method because built-in properties tend to not be enumerable","example":"console.log(obj.propertyIsEnumerable(\'a\'));<br>console.log(Math.propertyIsEnumerable(\'random\'));","output":"true<br>false"},{"name":"hasOwnProperty","shortDesc":"if a property exists as a direct property of the object","desc":"Returns a boolean indicating whether an object contains the specified property as a direct property of that object and not inherited through the prototype chain","example":"console.log(obj.hasOwnProperty(\'a\'));<br>delete obj.a;<br>console.log(obj.hasOwnProperty(\'a\'));","output":"true<br>false"}]},"get list of property details like keys and/or values":{"dropdownLabel":"I need to get an array of all of the:","options":[{"name":"getOwnPropertyDescriptor","shortDesc":"details about a property","desc":"Returns a property descriptor for a named property on an object","example":"const o = Object.getOwnPropertyDescriptor(obj, \'a\');<br><br>console.log(o);","output":"Object {<br><span>&nbsp;&nbsp;</span>configurable: true,<br><span>&nbsp;&nbsp;</span>enumerable: true,<br><span>&nbsp;&nbsp;</span>value: 1,<br><span>&nbsp;&nbsp;</span>writable: true<br>}"},{"name":"getOwnPropertyDescriptors","shortDesc":"details about all the properties on an object","desc":"Returns an object containing all own property descriptors for an object","example":"console.log(Object.getOwnPropertyDescriptors(obj))","output":"Object {<br><span>&nbsp;&nbsp;</span>a: Object {<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>configurable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>enumerable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>value: 1,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>writable: true<br><span>&nbsp;&nbsp;</span>},<br><span>&nbsp;&nbsp;</span>b: Object {<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>configurable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>enumerable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>value: 2,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>writable: true<br><span>&nbsp;&nbsp;</span>},<br><span>&nbsp;&nbsp;</span>c: Object {<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>configurable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>enumerable: true,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>value: 3,<br><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span>writable: true<br><span>&nbsp;&nbsp;</span>},<br>}"},{"name":"propertyIsEnumerable","shortDesc":"if a property can be traversed with a for...in loop","desc":"Returns a boolean indicating if the internal ECMAScript [[Enumerable]] attribute is set. This can be used to see if something is a built-in or user-defined method because built-in properties tend to not be enumerable","example":"console.log(obj.propertyIsEnumerable(\'a\'));<br>console.log(Math.propertyIsEnumerable(\'random\'));","output":"true<br>false"},{"name":"hasOwnProperty","shortDesc":"if a property exists as a direct property of the object","desc":"Returns a boolean indicating whether an object contains the specified property as a direct property of that object and not inherited through the prototype chain","example":"console.log(obj.hasOwnProperty(\'a\'));<br> delete obj.a;<br>console.log(obj.hasOwnProperty(\'a\'));","output":"true<br>false"}]},"restrict changes to an object":{"dropdownLabel":"I need to:","options":[{"name":"seal","shortDesc":"make sure properties can\'t be added or deleted","desc":"Prevents other code from deleting properties of an object. Existing properties can still be modified","example":"Object.seal(obj);<br>delete obj.c;<br><br>console.log(obj);","output":"{a: 1, b: 2, c: 3} // obj.c doesn\'t get deleted"},{"name":"freeze","shortDesc":"make sure properties can\'t be added, deleted, or modified","desc":"Freezes an object: other code can\'t delete or change any properties.","example":"Object.freeze(obj);<br>obj.a = 10;<br><br>console.log(obj.a);","output":"1 <span class=\'comment\'>//the value didn\'t update to 10</span>"},{"name":"preventExtensions","shortDesc":"make sure properties can\'t be added.","desc":"Prevents any extensions of an object. I can still delete properties but can\'t add any new ones.","example":"Object.preventExtensions(obj);<br>obj.d = 4;<br><br>console.log(obj.d);","output":"undefined"}]},"create string from an object":{"dropdownLabel":"I need to return a:","options":[{"name":"toString","shortDesc":"string representation of the object.","desc":"The <code>toString()</code> method returns a string representing the object. Though this is the built-in method available, it\'s usually more useful to use <a href=\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\\" target=\\"_blank\\"><code>JSON.stringify()</code></a>","example":"console.log(obj.toString());<br>console.log(obj.a.toString());","output":"\\"[object Object]\\"<br>\\"1\\""},{"name":"toLocaleString","shortDesc":"localized string representation of the object.","desc":"The <code>toLocaleString()</code> method returns a string representing the object. This method is meant to be overridden by derived objects for locale-specific purposes. In human terms: this means if you have something that has different data based on location, such as date methods, it will give you a different time format","example":"obj.d = new Date();<br><br>console.log(obj.d);<br>console.log(obj.d.toLocaleString());","output":"Fri Dec 29 2017 20:57:35 GMT-0700 (MST)<br>12/29/2017, 8:57:35 PM"}]}}}')},114:function(e){e.exports=JSON.parse('{"baseUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/","dropdownLabel":"I have an String, I would like to: ","defaultCode":"let str = \\"The quick brown fox jumps over the lazy dog. If the dog reacted, was it really lazy?\\";","specialNote":"All string methods return a new string. They don\'t modify the original string.<br>Formally said: Strings are immutable: Strings cannot be changed, only replaced.","options":{"extract a part of it":{"dropdownLabel":"Parameters can have:","options":[{"name":"slice","shortDesc":"positive or negative indexes","desc":"Extracts a part of a string and returns the extracted part in a new string.<br>This can accept negative index.","example":"let result = str.slice(-84, -65);<br>console.log(result);","output":"The quick brown fox"},{"name":"substring","shortDesc":"positive indexes only","desc":"Extracts a part of a string and returns the extracted part in a new string.<br>This cannot accept negative index.","example":"let result = str.substring(0, 19);<br>console.log(result);","output":"The quick brown fox"},{"name":"substr","shortDesc":"starting index & length of part to extract","desc":"Extracts a part of a string and returns the extracted part in a new string.<br>The second parameter specifies the length of the extracted part.","example":"let result = str.substr(0, 19);<br>console.log(result);","output":"The quick brown fox"}]},"replace a part of it":{"dropdownLabel":"I need to:","options":[{"name":"replace","shortDesc":"replace once with string","desc":"Returns a new string with first occurrence of a string replaced by a replacement.","example":"let result = str.replace(\'dog\', \'monkey\');<br>console.log(result);","output":"The quick brown fox jumps over the lazy monkey. If the dog reacted, was it really lazy?"},{"name":"replace","shortDesc":"replace once or all with regular expression","desc":"Returns a new string with some or all matches of a pattern replaced by a replacement.<br>Here pattern is a RegExp","example":"let result = str.replace(/dog/gi, \'monkey\'); <span class=\'comment\'>// g means global (replace all) & i means case insensitive</span> <br>console.log(result);","output":"The quick brown fox jumps over the lazy monkey. If the monkey reacted, was it really lazy?"},{"name":"replaceAll","shortDesc":"replace all always with or without regular expression","desc":"Returns a new string with all matches of a pattern replaced by a replacement.","example":"let result = str.replaceAll(\'dog\', \'monkey\');<br>console.log(result);","output":"The quick brown fox jumps over the lazy monkey. If the monkey reacted, was it really lazy?"}]},"change it\'s case":{"dropdownLabel":"I need to:","options":[{"name":"toLowerCase","shortDesc":"make it lowercase","desc":"Converts the string to lowercase","example":"let result = str.toLowerCase();<br>console.log(result)","output":"the quick brown fox jumps over the lazy monkey. if the monkey reacted, was it really lazy?"},{"name":"toUpperCase","shortDesc":"make it uppercase","desc":"Converts the string to uppercase","example":"let result = str.toUpperCase();<br>console.log(result);","output":"THE QUICK BROWN FOX JUMPS OVER THE LAZY MONKEY. IF THE MONKEY REACTED, WAS IT REALLY LAZY?"}]},"join, concatenate or repeat":{"dropdownLabel":"I need to:","options":[{"name":"concat","shortDesc":"join two new string","desc":"This method is used to join two or more strings.","example":"let result = str.concat(\' I don/\'t know\');<br>console.log(result) <span class=\'comment\'>// same thing can be achieved by let result = `${str} I don/\'t know`</span>","output":"The quick brown fox jumps over the lazy dog. If the dog reacted, was it really lazy? I don\'t know"},{"name":"repeat","shortDesc":"repeat a string","desc":"This method returns a new string with a specified number of copies of the string it was called on.","example":"let result = str.repeat();<br>console.log(result);","output":"The quick brown fox jumps over the lazy monkey. If the monkey reacted, was it really lazy?The quick brown fox jumps over the lazy monkey. If the monkey reacted, was it really lazy?"}]},"search or match in it":{"dropdownLabel":"I need to:","options":[{"name":"search","shortDesc":"search in a string","desc":"This method searches a string for a specified value, and returns the position of the match. The search value can be string or a regular expression.<br>This method returns - 1 if no match is found.","example":"let result = str.search(\'brown fox\');<br>console.log(result)","output":"10"},{"name":"match","shortDesc":"match all occurrence (using RegExp)","desc":"This method searches a string for a match against a regular expression, and returns the matches, as an Array object.","example":"let result = str.match(/dog/gi);<br>console.log(result);","output":"[\'dog\', \'dog\']"},{"name":"indexOf","shortDesc":"get index of the occurrence","desc":"This method returns the position of the first occurrence of a specified value in a string.<br>This method returns -1 if the value to search for never occurs.<br><strong > Note: </strong> The indexOf() method is case sensitive.","example":"let result = str.indexOf(\'dog\');<br>console.log(result);","output":"40"},{"name":"lastIndexOf","shortDesc":"get index of the last occurrence","desc":"This method returns the position of the last occurrence of a specified value in a string.<br><strong > Note: </strong> The string is searched from the end to the beginning, but returns the index starting at the beginning, at position 0.<br>This method returns -1 if the value to search for never occurs.<br><strong > Note: </strong> The lastIndexOf() method is case sensitive!","example":"let result = str.lastIndexOf(\'dog\');<br>console.log(result);","output":"52"},{"name":"includes","shortDesc":"check if character or string exists","desc":"This method determines whether a string contains the characters of a specified string.<br>This method returns true if the string contains the characters, and false if not.<br><strong > Note: </strong> The includes() method is case sensitive.","example":"let result = str.includes(\'dog\');<br>console.log(result);","output":"true"},{"name":"startsWith","shortDesc":"check if string starts with","desc":"This method determines whether a string begins with the characters of a specified string.<br>This method returns true if the string begins with the characters, and false if not.<br><strong > Note: </strong> The startsWith() method is case sensitive.","example":"let result = str.startsWith(\'dog\');<br>console.log(result);let result2 = str.startsWith(\'The\');<br>console.log(result2);","output":"false <span class=\'comment\'>// result</span><br>true <span class=\'comment\'>// result2</span>"},{"name":"endsWith","shortDesc":"check if string ends with","desc":"This method determines whether a string ends with the characters of a specified string.<br>This method returns true if the string ends with the characters, and false if not.<br><strong > Note: </strong> The endsWith() method is case sensitive.","example":"let result = str.endsWith(\'lazy?\');<br>console.log(result);let result2 = str.endsWith(\'The quick brown fox\');<br>console.log(result2);","output":"true <span class=\'comment\'>// result</span><br>false <span class=\'comment\'>// result2</span>"}]},"something else":{"dropdownLabel":"I need to:","options":[{"name":"length","shortDesc":"find the length of the string","desc":"Returns the number of elements in that string.","example":"console.log(str.length);","output":"90"},{"name":"split","shortDesc":"convert string to array","desc":"This method is used to split a string into an array of substrings, and returns the new array.<br><strong > Note: </strong> The includes() method is case sensitive.","example":"let result = str.split(\' \');<br>console.log(result);","output":"[\'The\', \'quick\', \'brown\', \'fox\', \'jumps\', \'over\', \'the\', \'lazy\', \'dog.\', \'If\', \'the\', \'dog\', \'reacted,\', \'was\', \'it\', \'really\', \'lazy?\']"},{"name":"trim","shortDesc":"trim whitespace from ends","desc":"This method is used to removes whitespace from both sides of a string.","example":"let result = str.trim();<br>console.log(result);","output":"The quick brown fox jumps over the lazy dog. If the dog reacted, was it really lazy?"},{"name":"charAt","shortDesc":"get character at a index","desc":"This method returns the character at the specified index in a string.","example":"let result = str.charAt(4);<br>console.log(result);","output":"q <span class=\'comment\'>// index starts from 0</span>"},{"name":"charCodeAt","shortDesc":"get Unicode of character","desc":"This method returns the Unicode of the character at the specified index in a string.","example":"let result = str.charCodeAt(4);<br>console.log(result);","output":"113"}]}}}')},115:function(e,t,n){"use strict";n.r(t);var r=n(0),s=n.n(r),a=n(12),o=n(22),i=n(39),c=n(70),l=n(60),p=n.n(l),b=n(71),d=n(16),u="ui/prefersDarkMode",h="ui/tabIndex",m={prefersDarkMode:!1,tabIndex:0,colors:{pink:"#FEB3B3",green:"#B0EA68"}},f=Object(i.b)({ui:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:m,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case u:return Object(d.a)(Object(d.a)({},e),{},{prefersDarkMode:!e.prefersDarkMode});case h:return Object(d.a)(Object(d.a)({},e),{},{tabIndex:t.value});default:return Object(d.a)({},e)}}}),g=Object(i.a)(c.a),j=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||i.c,x=Object(i.d)(f,void 0,j(g)),y=(n(106),n(172)),w=n(80),v=n(171),O=n(173),D=n(78),k=n.n(D),T=n(79),I=n.n(T),S=n(170),L=n(160),E=n(157),N=n(83),C=n(176),R=n(161),z=n(30),_=n(159),A=n(33),P=n(4),W=Object(E.a)((function(e){return{root:{borderRight:"1px solid ".concat(e.palette.divider)}}})),q=function(){var e=W(),t=Object(o.c)((function(e){return e.ui})).tabIndex,n=Object(o.b)(),r=Object(z.a)(),s=Object(_.a)(r.breakpoints.down("md"));return Object(P.jsx)(L.a,{item:!0,md:12,lg:2,children:Object(P.jsx)(C.a,{orientation:s?"horizontal":"vertical",variant:"scrollable",value:t,onChange:function(e,t){return n({type:h,value:t})},"aria-label":"categories-tab",classes:Object(d.a)({},e),children:A.tabs.map((function(e){var t,n=e.name,r=e.value;return Object(P.jsx)(R.a,Object(d.a)({label:n},{id:"vertical-tab-".concat(t=r),"aria-controls":"vertical-tabpanel-".concat(t)}),r)}))})})},M=n(81),U=n(175),F=["children","value","index"],J=Object(E.a)((function(){return{root:{marginLeft:30}}})),B=function(e){var t=J(),n=e.children,r=e.value,s=e.index,a=Object(M.a)(e,F);return Object(P.jsx)(U.a,Object(d.a)(Object(d.a)({role:"tabpanel",hidden:r!==s,id:"tabpanel-".concat(s),"aria-labelledby":"tab-".concat(s),className:t.root,mx:2},a),{},{children:r===s&&n}))},H=n(61),Y=n(178),G=n(169),V=n(177),K=n(174),X=Object(E.a)((function(){return{root:{marginTop:10}}})),Z=s.a.memo((function(e){var t=e.id,n=e.options,r=e.changeValue,s=e.label,a=void 0===s?0:s,o=X();return Object(P.jsx)(V.a,{id:t,className:o.root,options:n,getOptionLabel:function(e){return e[a]},selectOnFocus:!0,onChange:function(e,t){return r(t)},getOptionSelected:function(e,t){return e[a]===t[a]||null},renderInput:function(e){return Object(P.jsx)(K.a,Object(d.a)(Object(d.a)({},e),{},{label:"Choose operation",variant:"outlined"}))}})})),$=n(166),Q=n(164),ee=n(167),te=n(165),ne=n(168),re=Object(E.a)({title:{color:"#f50057"}}),se=s.a.memo((function(e){var t=e.data,n=e.defaultCode,r=re();return Object(P.jsx)(L.a,{item:!0,xs:12,children:Object(P.jsx)(Q.a,{variant:"outlined",elevation:3,children:Object(P.jsxs)(te.a,{children:[Object(P.jsx)(N.a,{variant:"h5",component:"h3",gutterBottom:!0,className:r.title,children:"Usage"}),Object(P.jsxs)(U.a,{className:"usage-code usage1",children:[Object(P.jsx)(N.a,{variant:"body1",component:"span",dangerouslySetInnerHTML:{__html:n}}),Object(P.jsx)("br",{}),Object(P.jsx)("br",{}),Object(P.jsx)(N.a,{variant:"body1",component:"span",className:"exampleoutput",dangerouslySetInnerHTML:{__html:t.example}})]}),Object(P.jsxs)(U.a,{className:"usage2",children:[Object(P.jsx)(N.a,{variant:"h5",component:"h3",gutterBottom:!0,className:r.title,children:"Output"}),Object(P.jsx)(U.a,{className:"usage-code",children:Object(P.jsx)(N.a,{variant:"body1",component:"span",className:"exampleoutput2",dangerouslySetInnerHTML:{__html:t.output}})})]})]})})})})),ae=n(77),oe=n.n(ae),ie=Object(E.a)({title:{color:"#f50057"},divider:{marginTop:20,marginBottom:20}}),ce=s.a.memo((function(e){var t=e.main,n=e.data,r=e.url,s=e.defaultCode,a=ie();return Object(P.jsx)(L.a,{item:!0,xs:12,children:Object(P.jsxs)(Q.a,{variant:"outlined",elevation:3,children:[Object(P.jsxs)(te.a,{children:[Object(P.jsxs)(N.a,{variant:"h4",component:"h2",gutterBottom:!0,className:a.title,children:[t,".",n.name,"()"]}),Object(P.jsx)(N.a,{dangerouslySetInnerHTML:{__html:n.desc}}),Object(P.jsx)($.a,{className:a.divider}),Object(P.jsx)(se,{data:n,defaultCode:s})]}),Object(P.jsx)(ee.a,{children:Object(P.jsxs)(ne.a,{variant:"h5",href:r,target:"_blank",rel:"noreferrer",children:["See the docs ",Object(P.jsx)(oe.a,{})]})})]})})})),le=function(e){var t=e.label,s="input-".concat(t.toLowerCase()),a="".concat(s,"-sub-option"),o=Object(r.useState)(),i=Object(H.a)(o,2),c=i[0],l=i[1],p=Object(r.useState)(),b=Object(H.a)(p,2),d=b[0],u=b[1],h=n(111)("./".concat(t.toLowerCase(),".en.json"));return Object(P.jsxs)(L.a,{container:!0,spacing:3,children:[Object(P.jsxs)(L.a,{item:!0,xs:12,children:[Object(P.jsxs)(N.a,{variant:"h2",children:[t," Explorer"]}),Object(P.jsxs)(N.a,{variant:"subtitle1",children:["Find the ",t.toLowerCase()," method you need without digging through the docs"]})]}),h.specialNote&&Object(P.jsx)(L.a,{item:!0,xs:12,children:Object(P.jsxs)(Y.a,{severity:"info",children:[Object(P.jsx)(G.a,{children:"Info"}),Object(P.jsx)(N.a,{dangerouslySetInnerHTML:{__html:h.specialNote}})]})}),h.dropdownLabel&&Object(P.jsx)(L.a,{item:!0,xs:12,children:Object(P.jsx)("label",{htmlFor:s,children:Object(P.jsx)(N.a,{variant:"body1",children:h.dropdownLabel})})}),h.options&&Object(P.jsx)(L.a,{item:!0,xs:12,children:Object(P.jsx)(Z,{id:s,options:Object.entries(h.options),changeValue:function(e){u(),l(e)}})}),c&&c.length&&Object(P.jsxs)(P.Fragment,{children:[Object(P.jsx)(L.a,{item:!0,xs:12,children:Object(P.jsx)("label",{htmlFor:a,children:Object(P.jsx)(N.a,{variant:"body1",children:c[1].dropdownLabel})})}),Object(P.jsx)(L.a,{item:!0,xs:12,children:Object(P.jsx)(Z,{id:a,options:c[1].options,changeValue:u,label:"shortDesc"})})]}),d&&Object.keys(d).length&&Object(P.jsx)(ce,{main:t,url:"".concat(h.baseUrl).concat(d.name),data:d,defaultCode:h.defaultCode})]})},pe=function(){var e=Object(o.c)((function(e){return e.ui})).tabIndex;return Object(P.jsx)(L.a,{item:!0,md:12,lg:10,children:A.tabs.map((function(t,n){return Object(P.jsx)(B,{index:n,value:e,children:Object(P.jsx)(le,{label:t.name})},t.name)}))})},be=Object(E.a)((function(e){return{root:{backgroundColor:e.palette.background.paper,paddingTop:10,paddingBottom:30}}})),de=function(){var e=Object(z.a)(),t=Object(_.a)(e.breakpoints.down("md")),n=be();return Object(P.jsxs)(S.a,{maxWidth:"lg",children:[Object(P.jsxs)(N.a,{variant:"h1",className:t?"responsive-h1":"",children:[Object(P.jsx)("span",{children:t?A.shortTitle:A.title})," Explorer"]}),Object(P.jsxs)(L.a,{container:!0,my:4,className:n.root,children:[Object(P.jsx)(q,{}),Object(P.jsx)(pe,{})]})]})},ue=function(){var e=Object(o.c)((function(e){return e.ui})).prefersDarkMode,t=Object(o.b)(),n=function(){return t(function(){var e=Object(b.a)(p.a.mark((function e(t){return p.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t({type:u});case 1:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}())},s=Object(r.useMemo)((function(){return Object(w.a)({palette:{type:e?"dark":"light"}})}),[e]);return Object(P.jsxs)(v.a,{theme:s,children:[Object(P.jsx)(y.a,{}),Object(P.jsx)(de,{}),Object(P.jsx)(O.a,{"aria-label":"theme-change",className:"theme-switcher-fab",onClick:function(){return n()},children:e?Object(P.jsx)(k.a,{}):Object(P.jsx)(I.a,{})})]})},he=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function me(e,t){navigator.serviceWorker.register(e).then((function(e){e.onupdatefound=function(){var n=e.installing;null!=n&&(n.onstatechange=function(){"installed"===n.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA."),t&&t.onUpdate&&t.onUpdate(e)):(console.log("Content is cached for offline use."),t&&t.onSuccess&&t.onSuccess(e)))})}})).catch((function(e){console.error("Error during service worker registration:",e)}))}var fe=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,180)).then((function(t){var n=t.getCLS,r=t.getFID,s=t.getFCP,a=t.getLCP,o=t.getTTFB;n(e),r(e),s(e),a(e),o(e)}))};Object(a.render)(Object(P.jsx)(s.a.StrictMode,{children:Object(P.jsx)(o.a,{store:x,children:Object(P.jsx)(ue,{})})}),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("/javascript-explorer",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(function(){var t="".concat("/javascript-explorer","/service-worker.js");he?(!function(e,t){fetch(e,{headers:{"Service-Worker":"script"}}).then((function(n){var r=n.headers.get("content-type");404===n.status||null!=r&&-1===r.indexOf("javascript")?navigator.serviceWorker.ready.then((function(e){e.unregister().then((function(){window.location.reload()}))})):me(e,t)})).catch((function(){console.log("No internet connection found. App is running in offline mode.")}))}(t,e),navigator.serviceWorker.ready.then((function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA")}))):me(t,e)}))}}(),fe(console.log)},33:function(e){e.exports=JSON.parse('{"title":"JavaScript","shortTitle":"JS","tabs":[{"name":"String","value":0},{"name":"Array","value":1},{"name":"Object","value":2}]}')}},[[115,1,2]]]);
//# sourceMappingURL=main.28381d41.chunk.js.map